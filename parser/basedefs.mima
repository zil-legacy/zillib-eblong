
<DEFINITIONS "BASEDEFS">

<COND (<GASSIGNED? ZILCH!-PACKAGE> <USE "ZILCH">) (T <USE "ZIL">)>

<USE "NEWSTRUC">

<BLOCK (<ROOT>)>

NUMBER-WORD-CLASSES

GET-CLASSIFICATION

VERB-STUFF-ID

<ENDBLOCK>

<INCLUDE "SYMBOLS">

<MSETG MAX-VERB-ARGS 2>

#WORD *3647603475*
		    <GFCN ZILCH? ("VALUE" !<FORM ATOM STRING>)>
		    <TEMP>
		    <INTGO>
		    <RETURN <COMPILATION-FLAG-VALUE "IN-ZILCH">>
		    <END ZILCH?>
<COND (<AND <GASSIGNED? ZILCH?> <NOT <TYPE? ,ZILCH? MACRO>>> <SETG ZILCH? <CHTYPE (,ZILCH?) MACRO>>)>

#WORD *3372557343*
		    <GFCN CHTYPE-VAL ("VALUE" <OR FORM LVAL> ANY ANY) ATOM4 TYPE5>
		    <TEMP TEMP9>
		    <INTGO>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE7 (DEAD-FALL TYPE5)>
		    <DEAD TEMP9>
		    <CHTYPE ATOM4 <TYPE-CODE LVAL> = TEMP9>
		    <DEAD ATOM4>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
PHRASE7
		    <FRAME 'FORM>
		    <PUSH 'SET>
		    <PUSH ATOM4>
		    <FRAME 'FORM>
		    <PUSH 'CHTYPE>
		    <CHTYPE ATOM4 <TYPE-CODE LVAL> = STACK>
		    <DEAD ATOM4>
		    <PUSH TYPE5>
		    <DEAD TYPE5>
		    <CALL 'FORM 3 = STACK>
		    <CALL 'FORM 3 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END CHTYPE-VAL>
<COND (<AND <GASSIGNED? CHTYPE-VAL> <NOT <TYPE? ,CHTYPE-VAL MACRO>>> <SETG CHTYPE-VAL <CHTYPE (,CHTYPE-VAL) MACRO>>)>

#WORD *17721311406*
		    <GFCN GET-TYPE ("VALUE" <OR ATOM FALSE> FIX) NUM4>
		    <TEMP L5:LIST TEMP15 S17:SYMBOL>
		    <INTGO>
		    <GVAL 'ALL-TERMINALS = L5 (TYPE LIST)>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <LOOP>
MAP7
		    <INTGO>
		    <EMPL? L5 + MAPAP10 (DEAD-JUMP NUM4 L5) (DEAD-FALL TEMP15)>
		    <NTHL L5 1 = S17>
		    <NTHUV S17 2 = TEMP15>
		    <EQUAL? TEMP15 NUM4 + TAG20 (DEAD-JUMP NUM4 L5) (DEAD-FALL S17)>
		    <DEAD TEMP15>
		    <SET TEMP15 %<> (TYPE FALSE)>
		    <JUMP + PHRASE19>
TAG20
		    <NTHUV S17 1 = TEMP15 (TYPE ATOM)>
		    <DEAD S17>
		    <RETURN TEMP15>
		    <DEAD TEMP15>
PHRASE19
		    <RESTL L5 1 = L5 (TYPE LIST)>
		    <JUMP + MAP7>
MAPAP10
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END GET-TYPE>

"Defaults for ZIL-type DEFSTRUCTs"

<SET-DEFSTRUCT-FILE-DEFAULTS ('START-OFFSET 0) ('NTH ZGET) ('PUT ZPUT) 'NODECL ('PRINTTYPE TABLE-PRINT)>

#WORD *23365732334*
		    <GFCN FIND-WORD ("VALUE" GVAL STRING) WD4>
		    <TEMP TEMP7:FIX NM5:STRING TEMP9>
		    <INTGO>
		    <PUSH "W?">
		    <PUSH WD4>
		    <DEAD WD4>
		    <SBLOCK <TYPE-CODE STRING> 2 = NM5 (TYPE STRING)>
		    <LENUS NM5 = TEMP7>
		    <IFSYS "TOPS20">
		    <ADD TEMP7 4 = TEMP7>
		    <DIV TEMP7 5 = TEMP7>
		    <ENDIF "TOPS20">
		    <IFSYS "UNIX">
		    <ADD TEMP7 3 = TEMP7>
		    <DIV TEMP7 4 = TEMP7>
		    <ENDIF "UNIX">
		    <SUB 0 TEMP7 = TEMP7>
		    <FRAME 'LOOKUP>
		    <PUSH NM5>
		    <FRAME 'MOBLIST>
		    <PUSH 'INITIAL>
		    <CALL 'MOBLIST 1 = STACK>
		    <CALL 'LOOKUP 2 = TEMP9>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> - BOOL8 (DEAD-JUMP NM5) (DEAD-FALL TEMP9)>
		    <FRAME 'INSERT>
		    <PUSH NM5>
		    <DEAD NM5>
		    <FRAME 'MOBLIST>
		    <PUSH 'INITIAL>
		    <CALL 'MOBLIST 1 = STACK>
		    <CALL 'INSERT 2 = TEMP9>
BOOL8
		    <CHTYPE TEMP9 <TYPE-CODE GVAL> = TEMP9>
		    <SUB TEMP7 2 = TEMP7 (TYPE FIX)>
		    <ADJ TEMP7>
		    <DEAD TEMP7>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END FIND-WORD>
<COND (<AND <GASSIGNED? FIND-WORD> <NOT <TYPE? ,FIND-WORD MACRO>>> <SETG FIND-WORD <CHTYPE (,FIND-WORD) MACRO>>)>

#WORD *4305434073*
		    <GFCN COMPARE-WORD-TYPES ("VALUE" FORM "QUOTE" ANY "QUOTE" ANY) T1-4 T2-5>
		    <TEMP TEMP7 TEMP10>
		    <INTGO>
		    <FRAME 'FORM>
		    <PUSH 'IFFLAG>
		    <CONS "IN-ZILCH" () = TEMP7>
		    <GVAL 'NUMBER-WORD-CLASSES = TEMP10 (TYPE FIX)>
		    <GRTR? TEMP10 15 - PHRASE9 (TYPE FIX)>
		    <DEAD TEMP10>
		    <FRAME 'FORM>
		    <PUSH 'AND>
		    <FRAME 'FORM>
		    <PUSH '==?>
		    <FRAME 'FORM>
		    <PUSH 'ANDB>
		    <PUSH T1-4>
		    <PUSH 32768>
		    <CALL 'FORM 3 = STACK>
		    <FRAME 'FORM>
		    <PUSH 'ANDB>
		    <PUSH T2-5>
		    <PUSH 32768>
		    <CALL 'FORM 3 = STACK>
		    <CALL 'FORM 3 = STACK>
		    <FRAME 'FORM>
		    <PUSH 'NOT>
		    <FRAME 'FORM>
		    <PUSH '0?>
		    <FRAME 'FORM>
		    <PUSH 'ANDB>
		    <PUSH T1-4>
		    <PUSH T2-5>
		    <PUSH 32767>
		    <CALL 'FORM 4 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'FORM 3 = TEMP10>
		    <JUMP + PHRASE18>
PHRASE9
		    <FRAME 'FORM>
		    <PUSH 'NOT>
		    <FRAME 'FORM>
		    <PUSH '0?>
		    <FRAME 'FORM>
		    <PUSH 'ANDB>
		    <PUSH T1-4>
		    <PUSH T2-5>
		    <CALL 'FORM 3 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'FORM 2 = TEMP10>
PHRASE18
		    <CONS TEMP10 () = TEMP10>
		    <PUTREST TEMP7 TEMP10>
		    <DEAD TEMP10>
		    <PUSH TEMP7>
		    <DEAD TEMP7>
		    <CONS 'T () = TEMP7>
		    <FRAME 'FORM>
		    <PUSH 'ZIL-COMPARE-WORD-TYPES>
		    <PUSH T1-4>
		    <DEAD T1-4>
		    <PUSH T2-5>
		    <DEAD T2-5>
		    <CALL 'FORM 3 = TEMP10>
		    <CONS TEMP10 () = TEMP10>
		    <PUTREST TEMP7 TEMP10>
		    <DEAD TEMP10>
		    <PUSH TEMP7>
		    <DEAD TEMP7>
		    <CALL 'FORM 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END COMPARE-WORD-TYPES>
<COND (<AND <GASSIGNED? COMPARE-WORD-TYPES> <NOT <TYPE? ,COMPARE-WORD-TYPES MACRO>>> <SETG COMPARE-WORD-TYPES <CHTYPE (,COMPARE-WORD-TYPES) MACRO>>)>

#WORD *26410634123*
		    <GFCN ZIL-COMPARE-WORD-TYPES ("VALUE" <OR ATOM FALSE> FIX FIX) T1-4 T2-5>
		    <TEMP TEMP8>
		    <INTGO>
		    <GVAL 'NUMBER-WORD-CLASSES = TEMP8 (TYPE FIX)>
		    <GRTR? TEMP8 15 - PHRASE7 (TYPE FIX)>
		    <DEAD TEMP8>
		    <XOR T1-4 T2-5 = TEMP8>
		    <AND TEMP8 #WORD *100000* = TEMP8>
		    <VEQUAL? TEMP8 0 + TAG11 (TYPE FIX) (DEAD-FALL T2-5 T1-4)>
		    <DEAD TEMP8>
		    <RETURN %<>>
TAG11
		    <AND T1-4 T2-5 = TEMP8>
		    <DEAD T1-4 T2-5>
		    <AND TEMP8 #WORD *77777* = TEMP8>
		    <VEQUAL? TEMP8 0 - TAG14 (TYPE FIX)>
		    <DEAD TEMP8>
		    <RETURN %<>>
TAG14
		    <RETURN 'T>
PHRASE7
		    <AND T1-4 T2-5 = TEMP8>
		    <DEAD T1-4 T2-5>
		    <VEQUAL? TEMP8 0 - TAG19 (TYPE FIX)>
		    <DEAD TEMP8>
		    <RETURN %<>>
TAG19
		    <RETURN 'T>
		    <END ZIL-COMPARE-WORD-TYPES>

#WORD *7611050371*
		    <GFCN GET-CLASSIFICATION ("VALUE" ANY "QUOTE" ANY) TYPE4>
		    <TEMP TEMP8>
		    <INTGO>
		    <TYPE? TYPE4 <TYPE-CODE ATOM> - PHRASE6>
		    <NTHR 'ALL-TERMINALS 1 = TEMP8 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE6) (DEAD-JUMP TEMP8)>
		    <TYPE? TEMP8 <TYPE-CODE FALSE> + PHRASE6 (DEAD-JUMP TEMP8)>
		    <NTHR TEMP8 1 = TEMP8 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP8 <TYPE-CODE UNBOUND> + PHRASE6>
		    <DEAD TEMP8>
		    <GVAL 'ALL-TERMINALS = TEMP8 (TYPE LIST)>
		    <EMPL? TEMP8 + PHRASE6 (TYPE LIST)>
		    <DEAD TEMP8>
		    <FRAME 'REALLY-GET-CLASSIFICATION>
		    <PUSH TYPE4>
		    <DEAD TYPE4>
		    <CALL 'REALLY-GET-CLASSIFICATION 1 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
PHRASE6
		    <FRAME 'FORM>
		    <PUSH 'REALLY-GET-CLASSIFICATION>
		    <PUSH TYPE4>
		    <DEAD TYPE4>
		    <CALL 'FORM 2 = TEMP8>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END GET-CLASSIFICATION>
<COND (<AND <GASSIGNED? GET-CLASSIFICATION> <NOT <TYPE? ,GET-CLASSIFICATION MACRO>>> <SETG GET-CLASSIFICATION <CHTYPE (,GET-CLASSIFICATION) MACRO>>)>

#WORD *10553545430*
		    <GFCN REALLY-GET-CLASSIFICATION ("VALUE" ANY <OR ATOM STRING>) TYPE4>
		    <TEMP L5 (RES6 %<>) S20:SYMBOL TEMP23 TEMP24 TEMP25 TEMP26 TEMP27>
		    <INTGO>
		    <GVAL 'ALL-TERMINALS = L5 (TYPE LIST)>
		    <TYPE? TYPE4 <TYPE-CODE ATOM> - PHRASE8>
		    <NTHR TYPE4 3 = TYPE4 (RECORD-TYPE ATOM)>
PHRASE8
		    <LOOP>
MAP10
		    <INTGO>
		    <EMPL? L5 + MAPAP13 (DEAD-JUMP L5)>
		    <NTHL L5 1 = S20>
		    <NTHUV S20 1 = TEMP23 (TYPE ATOM)>
		    <NTHR TEMP23 3 = TEMP23 (RECORD-TYPE ATOM)>
		    <IFCAN "STRING-EQUAL?">
		    <STRING-EQUAL? TYPE4 TEMP23 - PHRASE22 (DEAD-JUMP S20) (DEAD-FALL RES6 L5)>
		    <DEAD TEMP23>
		    <ENDIF "STRING-EQUAL?">
		    <IFCANNOT "STRING-EQUAL?">
		    <SET TEMP24 TYPE4>
		    <LENUS TEMP24 = TEMP25 (TYPE FIX)>
		    <LENUS TEMP23 = TEMP26 (TYPE FIX)>
		    <VEQUAL? TEMP25 TEMP26 - PHRASE22 (DEAD-JUMP TEMP25 TEMP24 TEMP23 S20)>
		    <DEAD TEMP26>
		    <LOOP (TEMP24 VALUE LENGTH) (TEMP23 VALUE LENGTH) (TEMP25 VALUE)>
TAG28
		    <NTHUS TEMP24 1 = TEMP26>
		    <NTHUS TEMP23 1 = TEMP27>
		    <VEQUAL? TEMP26 TEMP27 - PHRASE22 (DEAD-JUMP TEMP25 TEMP24 TEMP23 S20)>
		    <DEAD TEMP26 TEMP27>
		    <RESTUS TEMP24 1 = TEMP24 (TYPE STRING)>
		    <RESTUS TEMP23 1 = TEMP23 (TYPE STRING)>
		    <SUB TEMP25 1 = TEMP25 (TYPE FIX)>
		    <GRTR? TEMP25 0 + TAG28 (TYPE FIX) (DEAD-FALL TEMP25 TEMP24 TEMP23 RES6 L5)>
		    <ENDIF "STRING-EQUAL?">
		    <NTHUV S20 2 = RES6>
		    <DEAD S20>
		    <JUMP + MAPAP13>
PHRASE22
		    <RESTL L5 1 = L5 (TYPE LIST)>
		    <JUMP + MAP10>
MAPAP13
		    <TYPE? RES6 <TYPE-CODE FALSE> - PHRASE30 (DEAD-JUMP TYPE4) (DEAD-FALL RES6)>
		    <FRAME 'ERROR>
		    <PUSH 'UNKNOWN-CLASSIFICATION!-ERRORS>
		    <PUSH TYPE4>
		    <DEAD TYPE4>
		    <PUSH 'GET-CLASSIFICATION>
		    <CALL 'ERROR 3 = L5>
		    <RETURN L5>
		    <DEAD L5>
PHRASE30
		    <RETURN RES6>
		    <DEAD RES6>
		    <END REALLY-GET-CLASSIFICATION>

#WORD *17732102144*
		    <GFCN REST-TO-SLOT ("VALUE" ANY "QUOTE" ANY ATOM "OPTIONAL" FIX) OBJ6 WHICH7 PLUS8>
		    <OPT-DISPATCH 2 %<> OPT4 OPT5>
OPT4
		    <PUSH 0>
OPT5
		    <TEMP TEMP12 VAL9>
		    <INTGO>
		    <NTHR WHICH7 1 = TEMP12 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE11) (DEAD-JUMP PLUS8 OBJ6 TEMP12)>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> + PHRASE11 (DEAD-JUMP PLUS8 OBJ6 TEMP12)>
		    <NTHR TEMP12 1 = TEMP12 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP12 <TYPE-CODE UNBOUND> + PHRASE11 (DEAD-JUMP PLUS8 OBJ6)>
		    <DEAD TEMP12>
		    <GVAL WHICH7 = VAL9>
		    <DEAD WHICH7>
		    <TYPE? VAL9 <TYPE-CODE FIX> + PHRASE22>
		    <TYPE? VAL9 <TYPE-CODE OFFSET> - PHRASE14>
		    <NTHUV VAL9 1 = VAL9>
		    <JUMP + PHRASE22>
PHRASE14
		    <TYPE? VAL9 <TYPE-CODE MACRO> - PHRASE22>
		    <FRAME 'EXPAND>
		    <FRAME 'FORM>
		    <PUSH VAL9>
		    <DEAD VAL9>
		    <PUSH 'T>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'EXPAND 1 = VAL9>
		    <TYPE? VAL9 <TYPE-CODE ADECL> - PHRASE19>
		    <NTHUV VAL9 1 = VAL9>
PHRASE19
		    <NTHL VAL9 1 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE FIX> - PHRASE21>
		    <DEAD TEMP12>
		    <NTHL VAL9 1 = VAL9>
		    <JUMP + PHRASE22>
PHRASE21
		    <RESTL VAL9 1 = TEMP12 (TYPE LIST)>
		    <DEAD VAL9>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <NTHL TEMP12 1 = VAL9>
		    <DEAD TEMP12>
PHRASE22
		    <ADD VAL9 PLUS8 = VAL9 (TYPE FIX)>
		    <DEAD PLUS8>
		    <VEQUAL? VAL9 0 - PHRASE24 (TYPE FIX) (DEAD-FALL VAL9)>
		    <RETURN OBJ6>
		    <DEAD OBJ6>
PHRASE24
		    <FRAME 'FORM>
		    <PUSH 'ZREST>
		    <PUSH OBJ6>
		    <DEAD OBJ6>
		    <LSH VAL9 1 = STACK (TYPE FIX)>
		    <DEAD VAL9>
		    <CALL 'FORM 3 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE11
		    <FRAME 'ERROR>
		    <PUSH 'UNKNOWN-SLOT!-ERRORS>
		    <PUSH WHICH7>
		    <DEAD WHICH7>
		    <PUSH 'REST-TO-SLOT>
		    <CALL 'ERROR 3 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END REST-TO-SLOT>
<COND (<AND <GASSIGNED? REST-TO-SLOT> <NOT <TYPE? ,REST-TO-SLOT MACRO>>> <SETG REST-TO-SLOT <CHTYPE (,REST-TO-SLOT) MACRO>>)>

#WORD *17206730144*
		    <GFCN VERSION? ("VALUE" ANY "ARGS" ANY) LIST6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH ()>
OPT5
		    <TEMP (FIRST?7 'T) TEMP11 LL22 TST24 TEMP31 TST73 TEMP80>
		    <INTGO>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE9 (DEAD-FALL FIRST?7)>
		    <DEAD TEMP11>
		    <SET FIRST?7 %<> (TYPE FALSE)>
		    <SET TEMP11 LIST6 (TYPE LIST)>
		    <DEAD LIST6>
		    <LOOP>
MAP13
		    <INTGO>
		    <EMPL? TEMP11 + PHRASE63 (DEAD-JUMP TEMP11) (DEAD-FALL FIRST?7)>
		    <SET LL22 TEMP11>
		    <NTHL LL22 1 = FIRST?7 (TYPE LIST)>
		    <NTHL FIRST?7 1 = TST24>
		    <TYPE? TST24 <TYPE-CODE ATOM> - PHRASE26>
		    <NTHR TST24 3 = TST24 (RECORD-TYPE ATOM)>
PHRASE26
		    <TYPE? TST24 <TYPE-CODE STRING> - PHRASE28 (DEAD-JUMP LL22 TEMP11)>
		    <FRAME 'MEMBER>
		    <PUSH TST24>
		    <PUSH ["ZIP" "EZIP" "XZIP" "YZIP"]>
		    <CALL 'MEMBER 2 = TEMP31>
		    <TYPE? TEMP31 <TYPE-CODE FALSE> + PHRASE28 (DEAD-JUMP LL22 TEMP11)>
		    <DEAD TEMP31>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH TST24>
		    <DEAD TST24>
		    <CALL 'CHECK-VERSION? 1 = TEMP31>
		    <VEQUAL? TEMP31 0 + PHRASE51 (DEAD-JUMP FIRST?7) (DEAD-FALL LL22 TEMP11)>
		    <DEAD TEMP31>
		    <EMPL? FIRST?7 + PHRASE36>
		    <RESTL FIRST?7 1 = TEMP31 (TYPE LIST)>
		    <EMPL? TEMP31 + PHRASE36 (DEAD-JUMP TEMP31)>
		    <RESTL TEMP31 1 = TEMP31 (TYPE LIST)>
		    <EMPL? TEMP31 - PHRASE36>
		    <DEAD TEMP31>
		    <RESTL FIRST?7 1 = LL22 (TYPE LIST)>
		    <DEAD FIRST?7>
		    <NTHL LL22 1 = FIRST?7>
		    <DEAD LL22>
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
PHRASE36
		    <FRAME 'FORM>
		    <PUSH 'BIND>
		    <PUSH ()>
		    <SET TEMP11 2 (TYPE FIX)>
		    <RESTL FIRST?7 1 = LL22 (TYPE LIST)>
		    <DEAD FIRST?7>
		    <LOOP (LL22 VALUE) (TEMP11 VALUE)>
TAG42
		    <INTGO>
		    <EMPL? LL22 + TAG39 (DEAD-JUMP LL22)>
		    <NTHL LL22 1 = STACK>
		    <RESTL LL22 1 = LL22 (TYPE LIST)>
		    <ADD TEMP11 1 = TEMP11 (TYPE FIX)>
		    <JUMP + TAG42>
TAG39
		    <CALL 'FORM TEMP11 = FIRST?7>
		    <DEAD TEMP11>
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
PHRASE28
		    <TYPE? TST24 <TYPE-CODE FORM> + TAG45 (DEAD-JUMP TST24)>
		    <TYPE? TST24 <TYPE-CODE LVAL> + TAG45 (DEAD-JUMP TST24)>
		    <TYPE? TST24 <TYPE-CODE GVAL> - PHRASE44>
		    <DEAD TST24>
TAG45
		    <FRAME 'FORM>
		    <PUSH 'COND>
		    <PUSH FIRST?7>
		    <DEAD FIRST?7>
		    <CALL 'FORM 2 = FIRST?7>
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
PHRASE44
		    <EMPL? FIRST?7 + PHRASE49>
		    <RESTL FIRST?7 1 = LL22 (TYPE LIST)>
		    <EMPL? LL22 + PHRASE49 (DEAD-JUMP LL22)>
		    <RESTL LL22 1 = LL22 (TYPE LIST)>
		    <EMPL? LL22 - PHRASE49>
		    <DEAD LL22>
		    <RESTL FIRST?7 1 = LL22 (TYPE LIST)>
		    <DEAD FIRST?7>
		    <NTHL LL22 1 = FIRST?7>
		    <DEAD LL22>
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
PHRASE49
		    <FRAME 'FORM>
		    <PUSH 'BIND>
		    <PUSH ()>
		    <SET TST24 2 (TYPE FIX)>
		    <RESTL FIRST?7 1 = FIRST?7 (TYPE LIST)>
		    <LOOP (FIRST?7 VALUE) (TST24 VALUE)>
TAG55
		    <INTGO>
		    <EMPL? FIRST?7 + TAG52 (DEAD-JUMP FIRST?7)>
		    <NTHL FIRST?7 1 = STACK>
		    <RESTL FIRST?7 1 = FIRST?7 (TYPE LIST)>
		    <ADD TST24 1 = TST24 (TYPE FIX)>
		    <JUMP + TAG55>
TAG52
		    <CALL 'FORM TST24 = FIRST?7>
		    <DEAD TST24>
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
PHRASE51
		    <SET TST24 LL22>
		    <DEAD LL22>
		    <SET FIRST?7 1 (TYPE FIX)>
		    <LOOP (TST24 VALUE) (FIRST?7 VALUE)>
TAG61
		    <EMPL? TST24 + TAG59 (DEAD-JUMP TST24 TEMP11 FIRST?7)>
		    <SUB FIRST?7 1 = FIRST?7 (TYPE FIX)>
		    <LESS? FIRST?7 0 + TAG62 (DEAD-JUMP TST24 FIRST?7)>
		    <RESTL TST24 1 = TST24 (TYPE LIST)>
		    <JUMP + TAG61>
TAG62
		    <SET FIRST?7 %<> (TYPE FALSE)>
		    <JUMP + PHRASE58>
TAG59
		    <RETURN 'T>
PHRASE58
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <JUMP + MAP13>
PHRASE9
		    <SET TST24 () (TYPE LIST)>
		    <SET TEMP31 () (TYPE LIST)>
		    <SET TEMP11 LIST6 (TYPE LIST)>
		    <DEAD LIST6>
		    <LOOP>
MAP65
		    <INTGO>
		    <EMPL? TEMP11 + MAPAP68 (DEAD-JUMP TEMP31 TEMP11 FIRST?7)>
		    <NTHL TEMP11 1 = LL22>
		    <NTH1 LL22 = TST73>
		    <TYPE? TST73 <TYPE-CODE ATOM> - PHRASE75>
		    <NTHR TST73 3 = TST73 (RECORD-TYPE ATOM)>
PHRASE75
		    <TYPE? TST73 <TYPE-CODE STRING> - PHRASE77 (DEAD-JUMP TST73)>
		    <FRAME 'MEMBER>
		    <PUSH TST73>
		    <PUSH ["ZIP" "EZIP" "XZIP" "YZIP"]>
		    <CALL 'MEMBER 2 = TEMP80>
		    <TYPE? TEMP80 <TYPE-CODE FALSE> + PHRASE77 (DEAD-JUMP TST73)>
		    <DEAD TEMP80>
		    <VEQUAL? FIRST?7 0 + PHRASE82 (DEAD-FALL FIRST?7)>
		    <SET FIRST?7 %<> (TYPE FALSE)>
		    <CONS 'COND () = TEMP80 (TYPE LIST)>
		    <EMPL? TST24 - TAG84 (DEAD-FALL TEMP31 TST24)>
		    <SET TST24 TEMP80 (TYPE LIST)>
		    <JUMP + TAG85>
TAG84
		    <PUTREST TEMP31 TEMP80>
		    <DEAD TEMP31>
TAG85
		    <SET TEMP31 TEMP80 (TYPE LIST)>
		    <DEAD TEMP80>
		    <FRAME 'FORM>
		    <PUSH 'CHECK-VERSION?>
		    <PUSH TST73>
		    <DEAD TST73>
		    <CALL 'FORM 2 = STACK>
		    <SET TST73 1 (TYPE FIX)>
		    <REST1 LL22 = TEMP80>
		    <DEAD LL22>
		    <LOOP (TEMP80 TYPE VALUE LENGTH) (TST73 VALUE)>
TAG89
		    <INTGO>
		    <EMPTY? TEMP80 + TAG86 (DEAD-JUMP TEMP80)>
		    <NTH1 TEMP80 = STACK>
		    <REST1 TEMP80 = TEMP80>
		    <ADD TST73 1 = TST73 (TYPE FIX)>
		    <JUMP + TAG89>
TAG86
		    <LIST TST73 = TST73 (TYPE LIST)>
		    <CONS TST73 () = TST73 (TYPE LIST)>
		    <JUMP + PEEP112>
PHRASE82
		    <FRAME 'FORM>
		    <PUSH 'CHECK-VERSION?>
		    <PUSH TST73>
		    <DEAD TST73>
		    <CALL 'FORM 2 = STACK>
		    <SET TEMP80 1 (TYPE FIX)>
		    <REST1 LL22 = TST73>
		    <DEAD LL22>
		    <LOOP (TST73 TYPE VALUE LENGTH) (TEMP80 VALUE)>
TAG96
		    <INTGO>
		    <EMPTY? TST73 + TAG94 (DEAD-JUMP TST73)>
		    <NTH1 TST73 = STACK>
		    <REST1 TST73 = TST73>
		    <ADD TEMP80 1 = TEMP80 (TYPE FIX)>
		    <JUMP + TAG96>
TAG94
		    <LIST TEMP80 = TEMP80 (TYPE LIST)>
		    <JUMP + PHRASE106>
PHRASE77
		    <VEQUAL? FIRST?7 0 + PHRASE100 (DEAD-FALL FIRST?7)>
		    <SET FIRST?7 %<> (TYPE FALSE)>
		    <CONS 'COND () = TST73 (TYPE LIST)>
		    <EMPL? TST24 - TAG102 (DEAD-FALL TEMP31 TST24)>
		    <SET TST24 TST73 (TYPE LIST)>
		    <JUMP + TAG103>
TAG102
		    <PUTREST TEMP31 TST73>
		    <DEAD TEMP31>
TAG103
		    <SET TEMP31 TST73 (TYPE LIST)>
		    <DEAD TST73>
		    <CONS LL22 () = TST73 (TYPE LIST)>
		    <DEAD LL22>
PEEP112
		    <EMPL? TST24 - TAG104 (DEAD-FALL TEMP31 TST24)>
		    <SET TST24 TST73 (TYPE LIST)>
		    <JUMP + TAG105>
TAG104
		    <PUTREST TEMP31 TST73>
		    <DEAD TEMP31>
TAG105
		    <SET TEMP31 TST73 (TYPE LIST)>
		    <DEAD TST73>
		    <JUMP + MAP66>
PHRASE100
		    <SET TEMP80 LL22>
		    <DEAD LL22>
PHRASE106
		    <CONS TEMP80 () = TEMP80 (TYPE LIST)>
		    <EMPL? TST24 - TAG107 (DEAD-FALL TEMP31 TST24)>
		    <SET TST24 TEMP80 (TYPE LIST)>
		    <JUMP + TAG108>
TAG107
		    <PUTREST TEMP31 TEMP80>
		    <DEAD TEMP31>
TAG108
		    <SET TEMP31 TEMP80 (TYPE LIST)>
		    <DEAD TEMP80>
MAP66
		    <RESTL TEMP11 1 = TEMP11 (TYPE LIST)>
		    <JUMP + MAP65>
MAPAP68
		    <CHTYPE TST24 <TYPE-CODE FORM> = FIRST?7>
		    <DEAD TST24>
PHRASE63
		    <RETURN FIRST?7>
		    <DEAD FIRST?7>
		    <END VERSION?>
<COND (<AND <GASSIGNED? VERSION?> <NOT <TYPE? ,VERSION? MACRO>>> <SETG VERSION? <CHTYPE (,VERSION?) MACRO>>)>

#WORD *3657567500*
		    <GFCN IF-MUDDLE ("VALUE" ANY "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) MUDDLE6 ZILCH7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH 'T>
OPT5
		    <TEMP TEMP11>
		    <INTGO>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP11>
		    <TYPE? TEMP11 <TYPE-CODE FALSE> + PHRASE9 (DEAD-JUMP ZILCH7) (DEAD-FALL MUDDLE6)>
		    <DEAD TEMP11>
		    <RETURN ZILCH7>
		    <DEAD ZILCH7>
PHRASE9
		    <RETURN MUDDLE6>
		    <DEAD MUDDLE6>
		    <END IF-MUDDLE>
<COND (<AND <GASSIGNED? IF-MUDDLE> <NOT <TYPE? ,IF-MUDDLE MACRO>>> <SETG IF-MUDDLE <CHTYPE (,IF-MUDDLE) MACRO>>)>

#WORD *21112360212*
		    <GFCN DEBUG-CHECK ("VALUE" <OR ATOM FORM> "QUOTE" ANY "ARGS" ANY) PRED6 STUFF7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH ()>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <NTHR 'ZILCH!-ZILCH!-PACKAGE 1 = TEMP10 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE9) (DEAD-JUMP TEMP10)>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE9 (DEAD-JUMP TEMP10)>
		    <NTHR TEMP10 1 = TEMP10 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP10 <TYPE-CODE UNBOUND> + PHRASE9 (DEAD-FALL STUFF7 PRED6)>
		    <DEAD TEMP10>
		    <RETURN 'T>
PHRASE9
		    <FRAME 'FORM>
		    <PUSH 'COND>
		    <CONS PRED6 STUFF7 = STACK>
		    <DEAD PRED6 STUFF7>
		    <CALL 'FORM 2 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END DEBUG-CHECK>
<COND (<AND <GASSIGNED? DEBUG-CHECK> <NOT <TYPE? ,DEBUG-CHECK MACRO>>> <SETG DEBUG-CHECK <CHTYPE (,DEBUG-CHECK) MACRO>>)>

#WORD *21103035747*
		    <GFCN DEBUG20 ("VALUE" <OR ATOM FORM> "ARGS" ANY) ARG6>
		    <OPT-DISPATCH 0 %<> OPT4 OPT5>
OPT4
		    <PUSH ()>
OPT5
		    <TEMP TEMP9 TEMP12:LIST>
		    <INTGO>
		    <NTHR 'ZILCH!-ZILCH!-PACKAGE 1 = TEMP9 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE8) (DEAD-JUMP TEMP9)>
		    <TYPE? TEMP9 <TYPE-CODE FALSE> + PHRASE8 (DEAD-JUMP TEMP9)>
		    <NTHR TEMP9 1 = TEMP9 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP9 <TYPE-CODE UNBOUND> + PHRASE8 (DEAD-FALL ARG6)>
		    <DEAD TEMP9>
		    <RETURN 'T>
PHRASE8
		    <FRAME 'FORM>
		    <PUSH 'PROG>
		    <PUSH ()>
		    <SET TEMP9 2 (TYPE FIX)>
		    <SET TEMP12 ARG6>
		    <DEAD ARG6>
		    <LOOP (TEMP12 VALUE) (TEMP9 VALUE)>
TAG14
		    <INTGO>
		    <EMPL? TEMP12 + TAG11 (DEAD-JUMP TEMP12)>
		    <NTHL TEMP12 1 = STACK>
		    <RESTL TEMP12 1 = TEMP12 (TYPE LIST)>
		    <ADD TEMP9 1 = TEMP9 (TYPE FIX)>
		    <JUMP + TAG14>
TAG11
		    <CALL 'FORM TEMP9 = TEMP9>
		    <RETURN TEMP9>
		    <DEAD TEMP9>
		    <END DEBUG20>
<COND (<AND <GASSIGNED? DEBUG20> <NOT <TYPE? ,DEBUG20 MACRO>>> <SETG DEBUG20 <CHTYPE (,DEBUG20) MACRO>>)>

#WORD *331323031*
		    <GFCN TABLE? ("VALUE" FORM "QUOTE" ANY) FOO4>
		    <TEMP TEMP7>
		    <INTGO>
		    <NTHR 'ZILCH!-ZILCH!-PACKAGE 1 = TEMP7 (RECORD-TYPE ATOM) (BRANCH-FALSE + PHRASE6) (DEAD-JUMP TEMP7)>
		    <TYPE? TEMP7 <TYPE-CODE FALSE> + PHRASE6 (DEAD-JUMP TEMP7)>
		    <NTHR TEMP7 1 = TEMP7 (RECORD-TYPE GBIND)>
		    <TYPE? TEMP7 <TYPE-CODE UNBOUND> + PHRASE6>
		    <DEAD TEMP7>
		    <FRAME 'FORM>
		    <PUSH 'NOT>
		    <FRAME 'FORM>
		    <PUSH '0?>
		    <FRAME 'FORM>
		    <PUSH 'ANDB>
		    <PUSH FOO4>
		    <DEAD FOO4>
		    <PUSH 65280>
		    <CALL 'FORM 3 = STACK>
		    <CALL 'FORM 2 = STACK>
		    <CALL 'FORM 2 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
PHRASE6
		    <FRAME 'FORM>
		    <PUSH 'TYPE?>
		    <PUSH FOO4>
		    <DEAD FOO4>
		    <PUSH 'TABLE>
		    <CALL 'FORM 3 = TEMP7>
		    <RETURN TEMP7>
		    <DEAD TEMP7>
		    <END TABLE?>
<COND (<AND <GASSIGNED? TABLE?> <NOT <TYPE? ,TABLE? MACRO>>> <SETG TABLE? <CHTYPE (,TABLE?) MACRO>>)>

<DEFSTRUCT LEXV (TABLE 'NOTYPE 'PRINTTYPE) (LEXV-HEADER FIX 'NONE) (LEXV-LENGTH FIX 'OFFSET 0 'NTH GETB 'PUT PUTB) (LEXV-NWORDS FIX 'OFFSET 1 'NTH GETB 'PUT PUTB) (LEXV-START VWORD) (LEXV-WORD <OR VWORD FALSE '0> 'OFFSET 0 'NONE) (LEXV-WORD-LENGTH FIX 'OFFSET 2 'NTH GETB 'PUT PUTB 'NONE) (LEXV-WORD-OFFSET FIX 'OFFSET 3 'NTH GETB 'PUT PUTB 'NONE)>

<MSETG LEXV-ELEMENT-SIZE 2>

<MSETG LEXV-ELEMENT-SIZE-BYTES 4>

"The following is a first attempt to make words work in zilch and zil.
If ,ZILCH-RUNNING? is T (meaning that we're compiling something), then
the random VWORD frobbers want to expand with different offsets, depending
on how many bytes are taken up at the front of a word structure by the 
word itself.  In ZIP mode, it's 4; in EZIP, 6."

<MSETG ZIP-ZWORD-BYTES 4>

<MSETG EZIP-ZWORD-BYTES 6>

<NEWTYPE VWORD TABLE>

#WORD *7610566650*
		    <GFCN WORD-LEXICAL-WORD ("VALUE" FORM "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP13>
		    <INTGO>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE9 (DEAD-JUMP NEW7)>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP13>
		    <TYPE? TEMP13 <TYPE-CODE FALSE> + PHRASE11>
		    <DEAD TEMP13>
		    <FRAME 'ERROR>
		    <PUSH 'ATTEMPT-TO-CHANGE-WORD-NAME!-ERRORS>
		    <PUSH 'WORD-LEXICAL-WORD>
		    <CALL 'ERROR 2>
PHRASE11
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 0>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'FORM 4 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
PHRASE9
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 0>
		    <CALL 'FORM 3 = TEMP13>
		    <RETURN TEMP13>
		    <DEAD TEMP13>
		    <END WORD-LEXICAL-WORD>
<COND (<AND <GASSIGNED? WORD-LEXICAL-WORD> <NOT <TYPE? ,WORD-LEXICAL-WORD MACRO>>> <SETG WORD-LEXICAL-WORD <CHTYPE (,WORD-LEXICAL-WORD) MACRO>>)>

#WORD *5643625327*
		    <GFCN GET-OFFS ("VALUE" FIX ANY) OFFS4>
		    <TEMP TEMP8>
		    <INTGO>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP8>
		    <TYPE? TEMP8 <TYPE-CODE FALSE> + PHRASE6>
		    <DEAD TEMP8>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP8>
		    <VEQUAL? TEMP8 0 + PHRASE10>
		    <DEAD TEMP8>
		    <SET TEMP8 2 (TYPE FIX)>
		    <JUMP + PHRASE12>
PHRASE10
		    <SET TEMP8 3 (TYPE FIX)>
PHRASE12
		    <ADD TEMP8 OFFS4 = TEMP8 (TYPE FIX)>
		    <DEAD OFFS4>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
PHRASE6
		    <ADD OFFS4 1 = TEMP8 (TYPE FIX)>
		    <DEAD OFFS4>
		    <RETURN TEMP8>
		    <DEAD TEMP8>
		    <END GET-OFFS>

#WORD *23043113477*
		    <GFCN WORD-CLASSIFICATION-NUMBER ("VALUE" <OR ADECL FORM> "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP OFFS8 TEMP11>
		    <INTGO>
		    <FRAME 'GET-OFFS>
		    <PUSH 0>
		    <CALL 'GET-OFFS 1 = OFFS8>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP11>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE13 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH 'FIX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP11>
		    <CALL 'FORM 4 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE13
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <CALL 'FORM 3 = STACK>
		    <PUSH 'FIX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = OFFS8>
		    <CHTYPE OFFS8 <TYPE-CODE ADECL> = TEMP11>
		    <DEAD OFFS8>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END WORD-CLASSIFICATION-NUMBER>
<COND (<AND <GASSIGNED? WORD-CLASSIFICATION-NUMBER> <NOT <TYPE? ,WORD-CLASSIFICATION-NUMBER MACRO>>> <SETG WORD-CLASSIFICATION-NUMBER <CHTYPE (,WORD-CLASSIFICATION-NUMBER) MACRO>>)>

#WORD *23003113477*
		    <GFCN WORD-FLAGS ("VALUE" <OR ADECL FORM> "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP OFFS8 TEMP11>
		    <INTGO>
		    <FRAME 'GET-OFFS>
		    <PUSH 1>
		    <CALL 'GET-OFFS 1 = OFFS8>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP11>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE13 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH 'FIX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP11>
		    <CALL 'FORM 4 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE13
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <CALL 'FORM 3 = STACK>
		    <PUSH 'FIX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = OFFS8>
		    <CHTYPE OFFS8 <TYPE-CODE ADECL> = TEMP11>
		    <DEAD OFFS8>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END WORD-FLAGS>
<COND (<AND <GASSIGNED? WORD-FLAGS> <NOT <TYPE? ,WORD-FLAGS MACRO>>> <SETG WORD-FLAGS <CHTYPE (,WORD-FLAGS) MACRO>>)>

#WORD *34512604632*
		    <GFCN WORD-SEMANTIC-STUFF ("VALUE" FORM "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP OFFS8:FIX TEMP11>
		    <INTGO>
		    <FRAME 'GET-OFFS>
		    <PUSH 2>
		    <CALL 'GET-OFFS 1 = OFFS8>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP11>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE13 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'FORM 4 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE13
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <CALL 'FORM 3 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END WORD-SEMANTIC-STUFF>
<COND (<AND <GASSIGNED? WORD-SEMANTIC-STUFF> <NOT <TYPE? ,WORD-SEMANTIC-STUFF MACRO>>> <SETG WORD-SEMANTIC-STUFF <CHTYPE (,WORD-SEMANTIC-STUFF) MACRO>>)>

#WORD *24670727310*
		    <GFCN WORD-VERB-STUFF ("VALUE" <OR ADECL FORM> "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP10 TEMP39>
		    <INTGO>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP10>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE12>
		    <DEAD TEMP10>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP10>
		    <VEQUAL? TEMP10 0 + PHRASE15>
		    <DEAD TEMP10>
		    <FRAME 'GET-OFFS>
		    <PUSH 3>
		    <CALL 'GET-OFFS 1 = TEMP10>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE19 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH <OR VERB-DATA VERB-POINTER FALSE>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <CALL 'FORM 4 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE19
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <CALL 'FORM 3 = STACK>
		    <JUMP + PEEP48>
PHRASE15
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE28 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'WORD-SEMANTIC-STUFF>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH <OR FALSE VERB-DATA VERB-POINTER>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <JUMP + PEEP47>
PHRASE28
		    <FRAME 'FORM>
		    <PUSH 'WORD-SEMANTIC-STUFF>
		    <PUSH WD6>
		    <DEAD WD6>
		    <CALL 'FORM 2 = STACK>
PEEP48
		    <PUSH <OR FALSE VERB-DATA VERB-POINTER>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE12
		    <FRAME 'FORM>
		    <PUSH 'VERSION?>
		    <CONS 'ZIP () = TEMP10>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE37>
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH WD6>
		    <PUSH 4>
		    <PUSH NEW7>
		    <CALL 'FORM 4 = TEMP39>
		    <JUMP + PHRASE40>
PHRASE37
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH WD6>
		    <PUSH 4>
		    <CALL 'FORM 3 = TEMP39>
PHRASE40
		    <CONS TEMP39 () = TEMP39>
		    <PUTREST TEMP10 TEMP39>
		    <DEAD TEMP39>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <CONS 'T () = TEMP10>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE43 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'WORD-SEMANTIC-STUFF>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'FORM 3 = TEMP39>
		    <JUMP + PHRASE45>
PHRASE43
		    <FRAME 'FORM>
		    <PUSH 'WORD-SEMANTIC-STUFF>
		    <PUSH WD6>
		    <DEAD WD6>
		    <CALL 'FORM 2 = TEMP39>
PHRASE45
		    <CONS TEMP39 () = TEMP39>
		    <PUTREST TEMP10 TEMP39>
		    <DEAD TEMP39>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
PEEP47
		    <CALL 'FORM 3 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END WORD-VERB-STUFF>
<COND (<AND <GASSIGNED? WORD-VERB-STUFF> <NOT <TYPE? ,WORD-VERB-STUFF MACRO>>> <SETG WORD-VERB-STUFF <CHTYPE (,WORD-VERB-STUFF) MACRO>>)>

#WORD *22554630004*
		    <GFCN WORD-DIR-ID ("VALUE" <OR ADECL FORM> "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP10>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP10>
		    <TYPE? TEMP10 <TYPE-CODE FALSE> + PHRASE12>
		    <DEAD TEMP10>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP10>
		    <VEQUAL? TEMP10 0 + PHRASE15>
		    <DEAD TEMP10>
		    <SET TEMP10 8 (TYPE FIX)>
		    <JUMP + PHRASE18>
PHRASE15
		    <SET TEMP10 10 (TYPE FIX)>
		    <JUMP + PHRASE18>
PHRASE12
		    <SET TEMP10 6 (TYPE FIX)>
PHRASE18
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE20 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'PUTB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH <OR FALSE STRING FIX>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <CALL 'FORM 4 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
PHRASE20
		    <FRAME 'FORM>
		    <PUSH 'GETB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH TEMP10>
		    <DEAD TEMP10>
		    <CALL 'FORM 3 = STACK>
		    <PUSH <OR FALSE STRING FIX>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END WORD-DIR-ID>
<COND (<AND <GASSIGNED? WORD-DIR-ID> <NOT <TYPE? ,WORD-DIR-ID MACRO>>> <SETG WORD-DIR-ID <CHTYPE (,WORD-DIR-ID) MACRO>>)>

#WORD *31667673600*
		    <GFCN DO-WORD-ADJ-ID ("VALUE" ANY VWORD "OPTIONAL" <OR FALSE STRING FIX>) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP11>
		    <INTGO>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP11>
		    <VEQUAL? TEMP11 0 - PHRASE12>
		    <DEAD TEMP11>
		    <FRAME 'ERROR>
		    <PUSH 'WORD-ADJ-ID-USED-IN-EZIP/XZIP!-ERRORS>
		    <PUSH WD6>
		    <CALL 'ERROR 2>
PHRASE12
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE15 (DEAD-JUMP NEW7)>
		    <FRAME 'PUTB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 7>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'PUTB 3 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
PHRASE15
		    <FRAME 'GETB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 7>
		    <CALL 'GETB 2 = TEMP11>
		    <RETURN TEMP11>
		    <DEAD TEMP11>
		    <END DO-WORD-ADJ-ID>

#WORD *24047047342*
		    <GFCN WORD-ADJ-ID ("VALUE" <OR ADECL FORM> "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) WD6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP12 OFFS8:FIX>
		    <INTGO>
		    <FRAME 'COMPILATION-FLAG-VALUE>
		    <PUSH "IN-ZILCH">
		    <CALL 'COMPILATION-FLAG-VALUE 1 = TEMP12>
		    <TYPE? TEMP12 <TYPE-CODE FALSE> + PHRASE10>
		    <DEAD TEMP12>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP12>
		    <VEQUAL? TEMP12 0 - PHRASE20>
		    <DEAD TEMP12>
		    <FRAME 'FORM>
		    <PUSH 'ERROR>
		    <PUSH 'WORD-ADJ-ID-USED-IN-EZIP/XZIP!-ERRORS>
		    <PUSH WD6>
		    <CALL 'FORM 3>
PHRASE20
		    <SET OFFS8 8 (TYPE FIX)>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH 'VWORD>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP12>
		    <CHTYPE TEMP12 <TYPE-CODE ADECL> = WD6>
		    <DEAD TEMP12>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE24 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'PUTB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <PUSH <OR FALSE STRING FIX>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP12 (TYPE VECTOR)>
		    <CHTYPE TEMP12 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP12>
		    <CALL 'FORM 4 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE24
		    <FRAME 'FORM>
		    <PUSH 'GETB>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH OFFS8>
		    <DEAD OFFS8>
		    <CALL 'FORM 3 = STACK>
		    <JUMP + PEEP35>
PHRASE10
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> + PHRASE30 (DEAD-JUMP NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'DO-WORD-ADJ-ID>
		    <PUSH WD6>
		    <DEAD WD6>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'FORM 3 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE30
		    <FRAME 'FORM>
		    <PUSH 'DO-WORD-ADJ-ID>
		    <PUSH WD6>
		    <DEAD WD6>
		    <CALL 'FORM 2 = STACK>
PEEP35
		    <PUSH <OR FALSE STRING FIX>>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP12 (TYPE VECTOR)>
		    <CHTYPE TEMP12 <TYPE-CODE ADECL> = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END WORD-ADJ-ID>
<COND (<AND <GASSIGNED? WORD-ADJ-ID> <NOT <TYPE? ,WORD-ADJ-ID MACRO>>> <SETG WORD-ADJ-ID <CHTYPE (,WORD-ADJ-ID) MACRO>>)>

#WORD *30324214253*
		    <GFCN VWORD-PRINT ("VALUE" ANY VWORD) V4>
		    <TEMP SEM5 OUTCHAN6 TEMP15:FIX CT29:FIX MSK30:FIX BIT31:FIX TEMP35:FIX TEMP41>
		    <INTGO>
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 3>
		    <CALL 'ZGET 2 = SEM5>
		    <GEN-LVAL 'OUTCHAN = OUTCHAN6>
		    <FRAME 'PRINC>
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 0>
		    <CALL 'ZGET 2 = STACK>
		    <PUSH OUTCHAN6>
		    <CALL 'PRINC 2>
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 1>
		    <CALL 'ZGET 2 = TEMP15>
		    <VEQUAL? TEMP15 0 - PHRASE13 (TYPE FIX)>
		    <DEAD TEMP15>
		    <TYPE? SEM5 <TYPE-CODE FALSE> + PHRASE19>
		    <EQUAL? SEM5 0 + PHRASE19>
		    <FRAME 'PRINT-MANY>
		    <PUSH OUTCHAN6>
		    <PUSH 'PRINC>
		    <PUSH ":SYN:">
		    <FRAME 'ZGET>
		    <PUSH SEM5>
		    <PUSH 0>
		    <CALL 'ZGET 2 = STACK>
		    <CALL 'PRINT-MANY 4>
		    <JUMP + EXIT26>
PHRASE19
		    <FRAME 'PRINC>
		    <PUSH ":BUZZ">
		    <PUSH OUTCHAN6>
		    <CALL 'PRINC 2>
		    <JUMP + EXIT26>
PHRASE13
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 1>
		    <CALL 'ZGET 2 = TEMP15>
		    <SET CT29 1 (TYPE FIX)>
		    <SET MSK30 1 (TYPE FIX)>
		    <AND TEMP15 #WORD *100000* = BIT31>
		    <LOOP>
AGAIN32
		    <INTGO>
		    <AND MSK30 TEMP15 = TEMP35>
		    <VEQUAL? TEMP35 0 + PHRASE53 (TYPE FIX)>
		    <DEAD TEMP35>
		    <OR BIT31 MSK30 = TEMP35>
		    <FRAME 'REALLY-GET-CLASSIFICATION>
		    <PUSH 'ADJ>
		    <CALL 'REALLY-GET-CLASSIFICATION 1 = TEMP41>
		    <EQUAL? TEMP35 TEMP41 - PHRASE39>
		    <DEAD TEMP35 TEMP41>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP41>
		    <VEQUAL? TEMP41 0 + PHRASE43 (DEAD-FALL SEM5)>
		    <DEAD TEMP41>
		    <SET SEM5 %<> (TYPE FALSE)>
		    <FRAME 'PRINT-MANY>
		    <PUSH OUTCHAN6>
		    <PUSH 'PRINC>
		    <PUSH !\:>
		    <PUSH "ADJ">
		    <PUSH !\?>
		    <FRAME 'DO-WORD-ADJ-ID>
		    <PUSH V4>
		    <CALL 'DO-WORD-ADJ-ID 1 = STACK>
		    <JUMP + PEEP85>
PHRASE43
		    <FRAME 'PRINC>
		    <PUSH ":ADJ">
		    <PUSH OUTCHAN6>
		    <CALL 'PRINC 2>
		    <JUMP + PHRASE53>
PHRASE39
		    <OR BIT31 MSK30 = TEMP35>
		    <FRAME 'REALLY-GET-CLASSIFICATION>
		    <PUSH 'DIR>
		    <CALL 'REALLY-GET-CLASSIFICATION 1 = TEMP41>
		    <EQUAL? TEMP35 TEMP41 - PHRASE49 (DEAD-FALL SEM5)>
		    <DEAD TEMP35 TEMP41>
		    <SET SEM5 %<> (TYPE FALSE)>
		    <FRAME 'PRINT-MANY>
		    <PUSH OUTCHAN6>
		    <PUSH 'PRINC>
		    <PUSH !\:>
		    <PUSH "DIR">
		    <PUSH !\?>
		    <FRAME 'GETB>
		    <PUSH V4>
		    <PUSH 6>
		    <CALL 'GETB 2 = STACK>
PEEP85
		    <CALL 'PRINT-MANY 6>
		    <JUMP + PHRASE53>
PHRASE49
		    <FRAME 'PRINT-MANY>
		    <PUSH OUTCHAN6>
		    <PUSH 'PRINC>
		    <PUSH !\:>
		    <FRAME 'GET-TYPE>
		    <OR BIT31 MSK30 = STACK>
		    <CALL 'GET-TYPE 1 = TEMP41>
		    <NTHR TEMP41 3 = STACK (RECORD-TYPE ATOM)>
		    <DEAD TEMP41>
		    <CALL 'PRINT-MANY 4>
PHRASE53
		    <ADD CT29 1 = CT29 (TYPE FIX)>
		    <GRTR? CT29 15 + EXIT26 (TYPE FIX) (DEAD-JUMP BIT31 MSK30 CT29 TEMP15)>
		    <LSH MSK30 1 = MSK30 (TYPE FIX)>
		    <JUMP + AGAIN32>
EXIT26
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP41>
		    <VEQUAL? TEMP41 0 + PHRASE62 (DEAD-JUMP V4)>
		    <DEAD TEMP41>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP41>
		    <VEQUAL? TEMP41 0 + PHRASE64>
		    <DEAD TEMP41>
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 4>
		    <JUMP + PEEP84>
PHRASE64
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <PUSH 3>
PEEP84
		    <CALL 'ZGET 2 = TEMP41>
		    <TYPE? TEMP41 <TYPE-CODE FALSE> + PHRASE62 (DEAD-JUMP V4)>
		    <DEAD TEMP41>
		    <FRAME 'PRINC>
		    <PUSH !\:>
		    <PUSH OUTCHAN6>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP41>
		    <VEQUAL? TEMP41 0 + PHRASE72>
		    <DEAD TEMP41>
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <DEAD V4>
		    <PUSH 4>
		    <JUMP + PEEP83>
PHRASE72
		    <FRAME 'ZGET>
		    <PUSH V4>
		    <DEAD V4>
		    <PUSH 3>
PEEP83
		    <CALL 'ZGET 2 = TEMP41>
		    <PUSH TEMP41>
		    <DEAD TEMP41>
		    <PUSH OUTCHAN6>
		    <CALL 'PRIN1 2>
PHRASE62
		    <SET TEMP41 SEM5>
		    <TYPE? TEMP41 <TYPE-CODE FALSE> + PHRASE78 (DEAD-JUMP OUTCHAN6 SEM5) (DEAD-FALL TEMP41)>
		    <EQUAL? SEM5 0 - TAG80 (DEAD-FALL OUTCHAN6 SEM5)>
		    <RETURN %<>>
TAG80
		    <FRAME 'PRINC>
		    <PUSH !\:>
		    <PUSH OUTCHAN6>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <PUSH SEM5>
		    <DEAD SEM5>
		    <PUSH OUTCHAN6>
		    <DEAD OUTCHAN6>
		    <CALL 'PRIN1 2 = TEMP41>
PHRASE78
		    <RETURN TEMP41>
		    <DEAD TEMP41>
		    <END VWORD-PRINT>

<COND (<GASSIGNED? VWORD-PRINT> <PRINTTYPE VWORD ,VWORD-PRINT>)>

#WORD *23675464740*
		    <GFCN MAKE-VWORD ("VALUE" VWORD ANY FIX FIX) NAM4 CLASS5 FLAGS6>
		    <TEMP TEMP11 TAB7:VWORD>
		    <INTGO>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP11>
		    <VEQUAL? TEMP11 0 + PHRASE9>
		    <DEAD TEMP11>
		    <FRAME 'ITABLE>
		    <PUSH 5>
		    <JUMP + PEEP28>
PHRASE9
		    <FRAME 'ITABLE>
		    <PUSH 4>
PEEP28
		    <PUSH ((TEMP-TABLE))>
		    <CALL 'ITABLE 2 = TEMP11>
		    <CHTYPE TEMP11 <TYPE-CODE VWORD> = TAB7>
		    <DEAD TEMP11>
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 0>
		    <PUSH NAM4>
		    <DEAD NAM4>
		    <CALL 'ZPUT 3>
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 1>
		    <PUSH CLASS5>
		    <DEAD CLASS5>
		    <CALL 'ZPUT 3>
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 2>
		    <PUSH FLAGS6>
		    <DEAD FLAGS6>
		    <CALL 'ZPUT 3>
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 3>
		    <PUSH %<>>
		    <CALL 'ZPUT 3>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP11>
		    <VEQUAL? TEMP11 0 + PHRASE26>
		    <DEAD TEMP11>
		    <FRAME 'CHECK-VERSION?>
		    <PUSH "ZIP">
		    <CALL 'CHECK-VERSION? 1 = TEMP11>
		    <VEQUAL? TEMP11 0 + PHRASE23>
		    <DEAD TEMP11>
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 4>
		    <PUSH %<>>
		    <CALL 'ZPUT 3>
		    <RETURN TAB7>
		    <DEAD TAB7>
PHRASE23
		    <FRAME 'ZPUT>
		    <PUSH TAB7>
		    <PUSH 3>
		    <PUSH %<>>
		    <CALL 'ZPUT 3>
PHRASE26
		    <RETURN TAB7>
		    <DEAD TAB7>
		    <END MAKE-VWORD>

<NEWTYPE VERB-POINTER ATOM>

<DEFSTRUCT VERB-DATA (TABLE ('INIT-ARGS (TEMP-TABLE))) (VERB-ZERO ANY -1) (VERB-PREP <OR FALSE FIX VWORD>) (VERB-ONE <OR FALSE FIX TABLE>) (VERB-TWO <OR FALSE FIX TABLE>)>

<NEWTYPE VERB-SYNTAX VECTOR>

<COND (<GASSIGNED? TABLE-PRINT> <PRINTTYPE VERB-SYNTAX ,TABLE-PRINT>)>

<MSETG VERB-ONE-SYNTAX-LEN 6>

<MSETG VERB-TWO-SYNTAX-LEN 10>

#WORD *34424142766*
		    <GFCN SYNTAX-ID ("VALUE" FORM "QUOTE" ANY "OPTIONAL" "QUOTE" ANY) SYN6 NEW7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH #T$UNBOUND 0>
OPT5
		    <TEMP TEMP12>
		    <INTGO>
		    <TYPE? NEW7 <TYPE-CODE UNBOUND> - PHRASE9 (DEAD-FALL NEW7)>
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH SYN6>
		    <DEAD SYN6>
		    <PUSH 'VERB-SYNTAX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP12>
		    <CHTYPE TEMP12 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP12>
		    <PUSH 0>
		    <CALL 'FORM 3 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
PHRASE9
		    <FRAME 'FORM>
		    <PUSH 'ZPUT>
		    <PUSH SYN6>
		    <DEAD SYN6>
		    <PUSH 'VERB-SYNTAX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP12>
		    <CHTYPE TEMP12 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP12>
		    <PUSH 0>
		    <PUSH NEW7>
		    <DEAD NEW7>
		    <CALL 'FORM 4 = TEMP12>
		    <RETURN TEMP12>
		    <DEAD TEMP12>
		    <END SYNTAX-ID>
<COND (<AND <GASSIGNED? SYNTAX-ID> <NOT <TYPE? ,SYNTAX-ID MACRO>>> <SETG SYNTAX-ID <CHTYPE (,SYNTAX-ID) MACRO>>)>

<MSETG SYN-PREP 0>

<MSETG SP-LOCATION-TYPE -1>

<MSETG SYN-FIND 2>

<MSETG SYN-FIND-NEGATE 128>

<MSETG SYN-SEARCH 3>

<MSETG SYN-FIRST-ENTRY 1>

<MSETG SYN-ENTRY-SIZE 2>

#WORD *30701302125*
		    <GFCN SYNTAX-GET ("VALUE" FORM "QUOTE" ANY ANY "QUOTE" ANY) VS4 ELT5 WHICH6>
		    <TEMP TEMP15:FORM>
		    <INTGO>
		    <TYPE? ELT5 <TYPE-CODE ATOM> - PHRASE8>
		    <GVAL ELT5 = ELT5>
PHRASE8
		    <EQUAL? ELT5 0 - PHRASE10>
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH VS4>
		    <DEAD VS4>
		    <FRAME 'FORM>
		    <PUSH '+>
		    <PUSH ELT5>
		    <DEAD ELT5>
		    <PUSH 1>
		    <FRAME 'FORM>
		    <PUSH '*>
		    <FRAME 'FORM>
		    <PUSH '->
		    <PUSH WHICH6>
		    <DEAD WHICH6>
		    <PUSH 1>
		    <CALL 'FORM 3 = STACK>
		    <PUSH 2>
		    <JUMP + PEEP21>
PHRASE10
		    <FRAME 'FORM>
		    <PUSH 'GETB>
		    <PUSH VS4>
		    <DEAD VS4>
		    <FRAME 'FORM>
		    <PUSH '+>
		    <PUSH ELT5>
		    <DEAD ELT5>
		    <PUSH 2>
		    <FRAME 'FORM>
		    <PUSH '*>
		    <FRAME 'FORM>
		    <PUSH '->
		    <PUSH WHICH6>
		    <DEAD WHICH6>
		    <PUSH 1>
		    <CALL 'FORM 3 = STACK>
		    <PUSH 4>
PEEP21
		    <CALL 'FORM 3 = STACK>
		    <CALL 'FORM 4 = STACK>
		    <CALL 'FORM 3 = TEMP15>
		    <RETURN TEMP15>
		    <DEAD TEMP15>
		    <END SYNTAX-GET>
<COND (<AND <GASSIGNED? SYNTAX-GET> <NOT <TYPE? ,SYNTAX-GET MACRO>>> <SETG SYNTAX-GET <CHTYPE (,SYNTAX-GET) MACRO>>)>

#WORD *17727411213*
		    <GFCN SYNTAX-PREP ("VALUE" FORM "QUOTE" ANY "OPTIONAL" FIX) VS6 WHICH7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH 1>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <FRAME 'FORM>
		    <PUSH 'ZGET>
		    <PUSH VS6>
		    <DEAD VS6>
		    <PUSH 'VERB-SYNTAX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <SUB WHICH7 1 = TEMP10 (TYPE FIX)>
		    <DEAD WHICH7>
		    <LSH TEMP10 1 = TEMP10 (TYPE FIX)>
		    <ADD TEMP10 1 = STACK (TYPE FIX)>
		    <DEAD TEMP10>
		    <CALL 'FORM 3 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END SYNTAX-PREP>
<COND (<AND <GASSIGNED? SYNTAX-PREP> <NOT <TYPE? ,SYNTAX-PREP MACRO>>> <SETG SYNTAX-PREP <CHTYPE (,SYNTAX-PREP) MACRO>>)>

#WORD *32660630411*
		    <GFCN SYNTAX-FIND ("VALUE" FORM "QUOTE" ANY "OPTIONAL" FIX) VS6 WHICH7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH 1>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <FRAME 'FORM>
		    <PUSH 'GETB>
		    <PUSH VS6>
		    <DEAD VS6>
		    <PUSH 'VERB-SYNTAX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <SUB WHICH7 1 = TEMP10 (TYPE FIX)>
		    <DEAD WHICH7>
		    <LSH TEMP10 2 = TEMP10 (TYPE FIX)>
		    <ADD TEMP10 4 = STACK (TYPE FIX)>
		    <DEAD TEMP10>
		    <CALL 'FORM 3 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END SYNTAX-FIND>
<COND (<AND <GASSIGNED? SYNTAX-FIND> <NOT <TYPE? ,SYNTAX-FIND MACRO>>> <SETG SYNTAX-FIND <CHTYPE (,SYNTAX-FIND) MACRO>>)>

#WORD *32660630011*
		    <GFCN SYNTAX-SEARCH ("VALUE" FORM "QUOTE" ANY "OPTIONAL" FIX) VS6 WHICH7>
		    <OPT-DISPATCH 1 %<> OPT4 OPT5>
OPT4
		    <PUSH 1>
OPT5
		    <TEMP TEMP10>
		    <INTGO>
		    <FRAME 'FORM>
		    <PUSH 'GETB>
		    <PUSH VS6>
		    <DEAD VS6>
		    <PUSH 'VERB-SYNTAX>
		    <UBLOCK <TYPE-CODE VECTOR> 2 = TEMP10>
		    <CHTYPE TEMP10 <TYPE-CODE ADECL> = STACK>
		    <DEAD TEMP10>
		    <SUB WHICH7 1 = TEMP10 (TYPE FIX)>
		    <DEAD WHICH7>
		    <LSH TEMP10 2 = TEMP10 (TYPE FIX)>
		    <ADD TEMP10 5 = STACK (TYPE FIX)>
		    <DEAD TEMP10>
		    <CALL 'FORM 3 = TEMP10>
		    <RETURN TEMP10>
		    <DEAD TEMP10>
		    <END SYNTAX-SEARCH>
<COND (<AND <GASSIGNED? SYNTAX-SEARCH> <NOT <TYPE? ,SYNTAX-SEARCH MACRO>>> <SETG SYNTAX-SEARCH <CHTYPE (,SYNTAX-SEARCH) MACRO>>)>

<MSETG ACTION-SPLIT 128>

<MSETG REDUCTION-OFFSET <+ ,ACTION-SPLIT 1>>

<GDECL (ACTION-TABLE) <TABLE FIX [REST <VECTOR <OR FALSE VECTOR> <OR FALSE VECTOR>>]> (REDUCTION-TABLE) <TABLE [REST REDUCTION]>>

<DEFSTRUCT REDUCTION (TABLE ('PRINTTYPE PRINT-REDUCTION) ('INIT-ARGS (PARSER-TABLE))) (REDUCTION-SIZE FIX) (REDUCTION-FUNCTION <OR ATOM APPLICABLE>) (REDUCTION-ERR-PRIORITY FIX) (REDUCTION-PRIORITY FIX) (REDUCTION-RESULT FIX) (REDUCTION-NAME STRING)>

#WORD *20061526312*
		    <GFCN PRINT-REDUCTION ("VALUE" CHARACTER REDUCTION) R4>
		    <TEMP OUTCHAN5 FUNC6 TEMP14:FIX>
		    <INTGO>
		    <GEN-LVAL 'OUTCHAN = OUTCHAN5>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <PUSH 1>
		    <CALL 'ZGET 2>
		    <FRAME 'PRINC>
		    <PUSH "#REDUCTION [">
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <GVAL 'ALL-NONTERMINALS = FUNC6 (TYPE LIST)>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <PUSH 4>
		    <CALL 'ZGET 2 = TEMP14>
		    <SUB TEMP14 1 = TEMP14 (TYPE FIX)>
		    <GRTR? TEMP14 0 - RESTL16 (TYPE FIX) (DEAD-JUMP TEMP14)>
		    <LOOP (FUNC6 VALUE) (TEMP14 VALUE)>
RESTL15
		    <INTGO>
		    <RESTL FUNC6 1 = FUNC6 (TYPE LIST)>
		    <SUB TEMP14 1 = TEMP14 (TYPE FIX)>
		    <GRTR? TEMP14 0 + RESTL15 (TYPE FIX) (DEAD-FALL TEMP14)>
RESTL16
		    <NTHL FUNC6 1 = STACK (TYPE SYMBOL)>
		    <DEAD FUNC6>
		    <PUSH OUTCHAN5>
		    <CALL 'PRIN1 2>
		    <FRAME 'PRINC>
		    <PUSH !\ >
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRINC>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <PUSH 5>
		    <CALL 'ZGET 2 = STACK>
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRINC>
		    <PUSH !\ >
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <PUSH 0>
		    <CALL 'ZGET 2 = STACK>
		    <PUSH OUTCHAN5>
		    <CALL 'PRIN1 2>
		    <FRAME 'PRINC>
		    <PUSH !\ >
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <PUSH 2>
		    <CALL 'ZGET 2 = STACK>
		    <PUSH OUTCHAN5>
		    <CALL 'PRIN1 2>
		    <FRAME 'PRINC>
		    <PUSH !\ >
		    <PUSH OUTCHAN5>
		    <CALL 'PRINC 2>
		    <FRAME 'PRIN1>
		    <FRAME 'ZGET>
		    <PUSH R4>
		    <DEAD R4>
		    <PUSH 3>
		    <CALL 'ZGET 2 = STACK>
		    <PUSH OUTCHAN5>
		    <CALL 'PRIN1 2>
		    <FRAME 'PRINC>
		    <PUSH !\]>
		    <PUSH OUTCHAN5>
		    <DEAD OUTCHAN5>
		    <CALL 'PRINC 2 = FUNC6>
		    <RETURN FUNC6>
		    <DEAD FUNC6>
		    <END PRINT-REDUCTION>

<END-DEFINITIONS>
